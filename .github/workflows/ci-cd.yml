name: CI-CD (Build -> Scan -> Push -> GitOps Update via Flux)

on:
  push:
    branches: [ "main", "master" ]

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        id: build-image
        run: |
          IMAGE_NAME=docker.io/${{ github.repository_owner }}/rocket-lab-app
          TAG=${{ github.sha }}
          echo "IMAGE=${IMAGE_NAME}:${TAG}" >> $GITHUB_OUTPUT
          docker build -t $IMAGE_NAME:${TAG} .
          docker push $IMAGE_NAME:${TAG}

      - name: Scan image with Grype (Anchore)
        uses: anchore/grype-action@v0.70.0
        with:
          image: ${{ steps.build-image.outputs.IMAGE }}
          fail-build: false

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Helm lint (non-blocking)
        run: helm lint charts/myapp || true

      - name: Update kustomize & helm values with image tag
        run: |
          sed -i "s/newTag: .*/newTag: \"${{ github.sha }}\"/" k8s/overlays/dev/kustomization.yaml || true
          sed -i "s/^  tag: .*/  tag: \"${{ github.sha }}\"/" charts/myapp/values.yaml || true

      - name: Commit and push manifest updates (Flux will reconcile)
        env:
          GIT_AUTHOR_NAME: "github-actions[bot]"
          GIT_AUTHOR_EMAIL: "github-actions[bot]@users.noreply.github.com"
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"
          git add k8s/overlays/dev/kustomization.yaml charts/myapp/values.yaml
          git commit -m "chore: bump image tag to ${{ github.sha }}" || echo "no changes"
          git push origin HEAD:${{ github.ref_name }}
